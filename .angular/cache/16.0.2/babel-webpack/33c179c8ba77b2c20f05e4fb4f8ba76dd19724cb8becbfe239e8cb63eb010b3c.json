{"ast":null,"code":"import { HEROES } from \"./mock-heroes\";\nimport { of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport class HeroService {\n  constructor(http, messageService) {\n    this.http = http;\n    this.messageService = messageService;\n    this.heroesUrl = \"api/heroes\";\n  }\n  getHeroes() {\n    return this.http.get(this.heroesUrl);\n  }\n  getHero(id) {\n    const hero = HEROES.find(h => h.id === id);\n    this.messageService.add(`HeroService: fetched hero id = ${id}`);\n    return of(hero);\n  }\n  log(message) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HEROES","of","HeroService","constructor","http","messageService","heroesUrl","getHeroes","get","getHero","id","hero","find","h","add","log","message","i0","ɵɵinject","i1","HttpClient","i2","MessageService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sergi\\WebstormProjects\\Tour-Of-Heroes\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Hero} from \"./hero\";\nimport {HEROES} from \"./mock-heroes\";\nimport {Observable, of} from \"rxjs\";\nimport {MessageService} from \"./message.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HeroService {\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  private heroesUrl = \"api/heroes\";\n\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n  }\n\n  getHero(id: number): Observable<Hero> {\n    const hero: Hero = HEROES.find(h => h.id === id)!;\n\n    this.messageService.add(`HeroService: fetched hero id = ${id}`);\n\n    return of(hero);\n  }\n\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`)\n  }\n}\n"],"mappings":"AAEA,SAAQA,MAAM,QAAO,eAAe;AACpC,SAAoBC,EAAE,QAAO,MAAM;;;;AAQnC,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,cAA8B;IAAxD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,cAAc,GAAdA,cAAc;IAEpD,KAAAC,SAAS,GAAG,YAAY;EAFgD;EAIhFC,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,IAAI,CAACF,SAAS,CAAC;EAC9C;EAEAG,OAAOA,CAACC,EAAU;IAChB,MAAMC,IAAI,GAASX,MAAM,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAE;IAEjD,IAAI,CAACL,cAAc,CAACS,GAAG,CAAC,kCAAkCJ,EAAE,EAAE,CAAC;IAE/D,OAAOT,EAAE,CAACU,IAAI,CAAC;EACjB;EAEQI,GAAGA,CAACC,OAAe;IACzB,IAAI,CAACX,cAAc,CAACS,GAAG,CAAC,gBAAgBE,OAAO,EAAE,CAAC;EACpD;;AAnBWd,WAAW,C;mBAAXA,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;AAAXpB,WAAW,C;SAAXA,WAAW;EAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;EAAAC,UAAA,EAHV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
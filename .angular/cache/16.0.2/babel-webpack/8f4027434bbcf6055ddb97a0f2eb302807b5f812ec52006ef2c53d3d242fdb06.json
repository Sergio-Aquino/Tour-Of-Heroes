{"ast":null,"code":"import { of } from \"rxjs\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { catchError, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport class HeroService {\n  constructor(http, messageService) {\n    this.http = http;\n    this.messageService = messageService;\n    this.heroesUrl = \"api/heroes\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n  }\n  getHeroes() {\n    return this.http.get(this.heroesUrl).pipe(tap(_ => this.log(\"fetched heroes\")), catchError(this.handleError(\"getHeroes\", [])));\n  }\n  getHero(id) {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get(url).pipe(tap(_ => this.log(`fetched hero id=${id}`)), catchError(this.handleError(`getHero id=${id}`)));\n  }\n  log(message) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n  handleError(operation = \"operation\", result) {\n    return error => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result);\n    };\n  }\n  updateHero(hero) {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(tap(_ => this.log(`upadated hero id=${hero.id}`)), catchError(this.handleError(\"upadateHero\")));\n  }\n  addHero(hero) {\n    return this.http.post(this.heroesUrl, hero, this.httpOptions).pipe(tap(newHero => this.log(`added hero with id=${newHero.id}`)), catchError(this.handleError(\"addHero\")));\n  }\n  deleteHero(id) {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.delete(url, this.httpOptions).pipe(tap(_ => this.log(`deleted hero id=${id}`)), catchError(this.handleError(\"deleteHero\")));\n  }\n  searchHeroes(term) {\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get(`${this.heroesUrl}/?name=${term}`).pipe(tap(x => x.length ? this.log(`found heroes matching \"${term}\"`) : this.log(`no heroes matching \"${term}\"`)), catchError(this.handleError('searchHeroes', [])));\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","HttpHeaders","catchError","tap","HeroService","constructor","http","messageService","heroesUrl","httpOptions","headers","getHeroes","get","pipe","_","log","handleError","getHero","id","url","message","add","operation","result","error","console","updateHero","hero","put","addHero","post","newHero","deleteHero","delete","searchHeroes","term","trim","x","length","i0","ɵɵinject","i1","HttpClient","i2","MessageService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sergi\\WebstormProjects\\Tour-Of-Heroes\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Hero} from \"./hero\";\nimport {HEROES} from \"./mock-heroes\";\nimport {Observable, of} from \"rxjs\";\nimport {MessageService} from \"./message.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport { catchError, map, tap } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HeroService {\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  private heroesUrl = \"api/heroes\";\n\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n        .pipe(tap(_=> this.log(\"fetched heroes\")), catchError(this.handleError<Hero[]>(\"getHeroes\", [])));\n  }\n\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.get<Hero>(url)\n        .pipe(tap(_=> this.log(`fetched hero id=${id}`)), catchError(this.handleError<Hero>(`getHero id=${id}`)));\n  }\n\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`)\n  }\n\n  private handleError<T>(operation = \"operation\", result?: T) {\n    return(error: any): Observable<T> => {\n      console.error(error);\n\n      this.log(`${operation} failed: ${error.message}`);\n\n      return of(result as T);\n    };\n  }\n\n  updateHero(hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions)\n        .pipe(tap(_=> this.log(`upadated hero id=${hero.id}`)), catchError(this.handleError<any>(\"upadateHero\")));\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({\"Content-Type\": \"application/json\"})\n  };\n\n  addHero(hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions)\n        .pipe(tap((newHero: Hero) => this.log(`added hero with id=${newHero.id}`)), catchError(this.handleError<Hero>(\"addHero\")));\n  }\n\n  deleteHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions)\n        .pipe(tap(_=>this.log(`deleted hero id=${id}`)), catchError(this.handleError<Hero>(\"deleteHero\")));\n  }\n\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      return of([]);\n    }\n\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`)\n        .pipe(tap(x => x.length ? this.log(`found heroes matching \"${term}\"`) : this.log(`no heroes matching \"${term}\"`)),\n         catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}